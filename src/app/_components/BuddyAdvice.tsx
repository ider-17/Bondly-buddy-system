"use client"

import { useState } from "react";
import { Button } from "@/components/ui/button";
import { Lightbulb } from 'lucide-react';

const categorizedSteps = {
    career: [
        {
            content: "–®–∏–Ω—ç –∞–∂–∏–ª—Ç–∞–Ω–¥ –∫–∞—Ä—å–µ—Ä —Ö”©–≥–∂–ª–∏–π–Ω –∂–∏—à—ç—ç –∑–∞–º—ã–≥ —Ö—É–≤–∞–∞–ª—Ü–∞–∞—Ä–∞–πüí°",
        },
        {
            content: "–ö–∞—Ä—å–µ—Ä–∏–π–Ω ”©—Å”©–ª—Ç –±–æ–ª —á–∏–≥–ª—ç–ª –±–∏—à, —á–∞–¥–≤–∞—Ä—Ç–∞–π —à—É—É–¥ —Ö–æ–ª–±–æ–æ—Ç–æ–π. –ß–∞–¥–≤–∞—Ä–∞–∞ –ª —Ö”©–≥–∂“Ø“Ø–ª üí™",
        },
        {
            content: "–¢–æ–¥–æ—Ä—Ö–æ–π —á–∏–≥–ª—ç–ª–≥“Ø–π –±–∞–π–ª–∞–∞ –≥—ç—ç–¥ —Å–∞–Ω–∞–∞ –∑–æ–≤–æ—Ö —Ö—ç—Ä—ç–≥–≥“Ø–π. “Æ–π–ª–¥—ç–ª —Ö–∏–π—Å—ç—ç—Ä –±–∞–π–≤–∞–ª –∑–∞–º –≥–∞—Ä—á –∏—Ä–Ω—ç üõ§Ô∏è",
        },
        {
            content: "‚Äú–ì“Ø–Ω —Ç”©–≤–ª”©—Ä”©–ª‚Äù –±–æ–ª “Ø–Ω—ç —Ü—ç–Ω –±“Ø—Ç—ç—ç—Ö –≥–æ–ª —Ç“Ø–ª—Ö“Ø“Ø—Ä. –•”©–Ω–¥–ª”©–Ω–≥–∏–π–Ω —Å–∞–∞–¥–Ω–∞–∞—Å –∞–Ω–≥–∏–¥ –±–∞–π üßò",
        },
        {
            content: "–ê–º–∂–∏–ª—Ç—Ç–∞–π —Ö“Ø–º“Ø“Ø—Å ”©”©—Ä–∏–π–Ω “Ø–Ω—ç —Ü—ç–Ω–∏–π–≥ –±“Ø—Ç—ç—ç–∂, –¥–∞—Ä–∞–∞ –Ω—å —ç—Ä—Ö —á”©–ª”©”©–≥ –æ–ª–¥–æ–≥ üß±",
        },
        {
            content: "‚Äú–ö–∞—Ä—å–µ—Ä–∏–π–Ω –¥—É—É–¥–ª–∞–≥–∞‚Äù ”©”©—Ä”©”© –∏—Ä—ç—Ö–∏–π–≥ –±“Ø“Ø —Ö“Ø–ª—ç—ç. –•–∞—Ä–∏–Ω ”©”©—Ä”©”© –±“Ø—Ç—ç—ç üõ†Ô∏è",
        },
    ],
    technical: [
        {
            content: "–¢–µ—Ö–Ω–æ–ª–æ–≥–∏ –±–∞–π–Ω–≥–∞ ”©”©—Ä—á–ª”©–≥–¥”©–Ω”©. –•–∞—Ä–∏–Ω —Å—É—Ä–∞–ª—Ü–∞—Ö —á–∞–¥–≤–∞—Ä –±–∞–π–Ω–≥–∞ —Ö–æ–∂–∏–≥—á –±–∞–π–¥–∞–≥. üîÅ",
        },
        {
            content: "–ë–∞–≥–∞ –±–∞–≥–∞–∞—Ä, —Ç–æ–≥—Ç–º–æ–ª —Å–∞–π–∂—Ä—É—É–ª. –¢–æ–º –∞—Ö–∏—Ü ”©–¥”©—Ä –±“Ø—Ä–∏–π–Ω –∂–∏–∂–∏–≥ –∞–ª—Ö–º–∞–∞—Å —ç—Ö—ç–ª–¥—ç–≥. üìà",
        },
        {
            content: "–ö–æ–¥ –±–æ–ª –∑”©–≤—Ö”©–Ω –±–∏—á–∏—Ö –±–∏—à, —É–Ω—à–∏—Ö–∞–¥ –æ–π–ª–≥–æ–º–∂—Ç–æ–π –±–∞–π—Ö–∞–∞—Å —Ö–∞–º–∞–∞—Ä–¥–∞–≥. üß©",
        },
        {
            content: "‚ÄúDRY‚Äù –∑–∞—Ä—á–∏–º: –¥–∞–≤—Ç–∞–≥–¥—Å–∞–Ω –∑“Ø–π–ª—Å–∏–π–≥ –æ–ª–∂, –Ω—ç–≥—Ç–≥—ç–∂, –∞–≤—Ç–æ–º–∞—Ç–∂—É—É–ª. üîÇ",
        },
        {
            content: "–î–∏–∑–∞–π–Ω –±–æ–ª –∑”©–≤—Ö”©–Ω –≥–æ—ë —Ö–∞—Ä–∞–≥–¥–∞—Ö –±–∏—à, —Ö—ç—Ä—ç–≥–ª—ç—á–¥—ç–¥ –æ–π–ª–≥–æ–º–∂—Ç–æ–π –±–∞–π—Ö–∞–∞—Å —Ö–∞–º–∞–∞—Ä–¥–∞–≥. üß©",
        },
        {
            content: "–ê–ª–¥–∞–∞ –±–æ–ª —Å—É—Ä–∞–ª—Ü–∞—Ö —ç—Ö “Ø“Ø—Å–≤—ç—Ä. Debug —Ö–∏–π—Ö –Ω—å —Ö”©–≥–∂“Ø“Ø–ª—ç–ª—Ç–∏–π–Ω –Ω—ç–≥ —á—É—Ö–∞–ª —Ö—ç—Å—ç–≥. üß†",
        }
    ],
    communication: [
        {
            content: "–°–∞–π–Ω —Ö–∞—Ä–∏–ª—Ü–∞–≥—á —Å–æ–Ω—Å–æ—Ö–¥–æ–æ –∏–ª“Ø“Ø —Å–∞–π–Ω –±–∞–π–¥–∞–≥. –°–æ–Ω—Å–æ—Ö –±–æ–ª –∏–¥—ç–≤—Ö—Ç—ç–π “Ø–π–ª–¥—ç–ª. üëÇ",
        },
        {
            content: "–•“Ø–Ω–¥ —Ö—ç—Ü“Ø“Ø —Å–æ—Ä–∏–ª—Ç—ã–≥ —Ö–∞—è–∂ –∑—É–≥—Ç–∞–∞—Ö –±–∏—à –º—ç–¥–ª—ç–≥, —É—Ä —á–∞–¥–≤–∞—Ä, –∑–æ—Ä–∏–≥, –∏—Ç–≥—ç–ª—ç—ç—Ä –¥–∞–≤–∞–Ω —Ç—É—É–ª–∞—Ö —Ö—ç—Ä—ç–≥—Ç—ç–π. üí¨",
        },
        {
            content: "‚Äú–ë–∏ –∏–Ω–≥—ç–∂ –æ–π–ª–≥–æ–∂ –±–∞–π–Ω–∞...‚Äù –≥—ç–∂ —ç—Ö–ª—ç–≤—ç–ª –∑”©—Ä—á–∏–ª –±–∞–≥–∞—Å–¥–∞–≥. ‚ú®",
        },
        {
            content: "–ë—É—Å–¥—ã–≥ —à“Ø“Ø–º–∂–ª—ç—Ö –±–∏—à, —Ç—ç–¥–Ω–∏–π —Ö—ç—Ä—ç–≥—Ü—ç—ç, –º—ç–¥—Ä—ç–º–∂–∏–π–≥ –æ–π–ª–≥–æ—Ö –≥—ç–∂ –æ—Ä–æ–ª–¥. ü§ù",
        },
        {
            content: "–¢–æ–¥–æ—Ä—Ö–æ–π, —Ç–æ–≤—á, —Ç–∞–π–≤–∞–Ω —Ö—ç–ª. –°—ç—Ç–≥—ç–ª —Ö”©–¥–ª”©–ª”©”© –±—É—Å, –∑–æ—Ä–∏–ª–≥–æ–æ —É–¥–∏—Ä–¥. üßä",
        },

    ],
    leadership: [
        {
            content: "–ñ–∏–Ω—Ö—ç–Ω—ç —É–¥–∏—Ä–¥–∞–≥—á –±–æ–ª –±—É—Å–¥—ã–≥ —Ö–∞–º–≥–∞–∞–ª–∂, –¥—ç–º–∂–¥—ç–≥ —Ö“Ø–Ω. üõ°Ô∏è",
        },
        {
            content: "–ò—Ç–≥—ç–ª—Ü—ç–ª “Ø“Ø—Å–≥—ç—Ö —Ö–∞–º–≥–∏–π–Ω —Å–∞–π–Ω –∞—Ä–≥–∞ –±–æ–ª ”©”©—Ä”©”© –∏–ª —Ç–æ–¥ –±–∞–π—Ö. üîç",
        },
        {
            content: "–£–¥–∏—Ä–¥–∞–Ω–∞ –≥—ç–¥—ç–≥ –±–æ–ª –±—É—Å–¥—ã–≥ —á–∏–≥–ª“Ø“Ø–ª—ç—Ö –±–∏—à, —É—Ä–∞–º –∑–æ—Ä–∏–≥ ”©–≥”©—Ö. üåü",
        },
        {
            content: "–°—É–ª —Ç–∞–ª–∞–∞ –Ω—É—É—Ö —Ö—ç—Ä—ç–≥–≥“Ø–π ‚Äî –∑–æ—Ä–∏–≥—Ç–æ–π –∏–ª—ç—Ä—Ö–∏–π–ª—ç—Ö –Ω—å —Ö“Ø—á —á–∞–¥–∞–ª. üí¨",
        },
        {
            content: "–ë—É—Å–¥–∞–¥ “Ø–π–ª—á–ª—ç—Ö —Ö–∞–Ω–¥–ª–∞–≥–∞ –±–æ–ª —Ö–∞–º–≥–∏–π–Ω —Ö“Ø—á—Ç—ç–π –º–∞–Ω–ª–∞–π–ª–∞–ª. ü§≤",
        }
    ],
    teamwork: [
        {
            content: "–ò—Ç–≥—ç–ª –±–æ–ª –±–∞–≥–∏–π–Ω –∞–º–∂–∏–ª—Ç—ã–Ω —Å—É—É—Ä—å. –ò—Ç–≥—ç–ª–≥“Ø–π –±–æ–ª –±—É—Å–∞–¥ –Ω—å –Ω—É—Ä–Ω–∞. üß±",
        },
        {
            content: "–ó”©—Ä—á–∏–ª –±–æ–ª –∑–∞–π–ª—à–≥“Ø–π. –•–∞–º–≥–∏–π–Ω –≥–æ–ª –Ω—å –∑”©—Ä—á–∏–ª–¥”©”© –∑”©–≤ —Ö–∞–Ω–¥–∞—Ö. üî•",
        },
        {
            content: "–ê–º–∂–∏–ª—Ç—Ç–∞–π –±–∞–≥—É—É–¥ –Ω—ç—ç–ª—Ç—Ç—ç–π, —É—è–Ω —Ö–∞—Ä–∏–ª—Ü–∞–∞—Ç–∞–π –±–∞–π–¥–∞–≥. üîÑ",
        },
        {
            content: "–•–∞—Ä–∏—É—Ü–ª–∞–≥—ã–≥ –Ω—ç–≥ —Ö“Ø–Ω –±–∏—à, –±“Ø—Ö –≥–∏—à“Ø“Ø–Ω —Ö–∞–º—Ç “Ø“Ø—Ä–¥—ç–≥. ‚öñÔ∏è",
        },
        {
            content: "‚Äú–ë–∏‚Äù –±–∏—à ‚Äú–±–∏–¥‚Äù –≥—ç–∂ —Å—ç—Ç–≥—ç—Ö –Ω—å —Ö–∞–º—Ç—ã–Ω –∞–º–∂–∏–ª—Ç—ã–Ω —Ç“Ø–ª—Ö“Ø“Ø—Ä. üåê",
        },
    ],
    workupbalance: [
        {
            content: "–ë“Ø—Ö –∑“Ø–π–ª–∏–π–≥ –∞–º–∂—É—É–ª–∞—Ö –≥—ç–∂ –±“Ø“Ø –æ—Ä–æ–ª–¥. –•–∞–º–≥–∏–π–Ω —á—É—Ö–ª—ã–≥ –ª —Å–æ–Ω–≥–æ. üéØ",
        },
        {
            content: "‚Äú“Æ–≥“Ø–π‚Äù –≥—ç–∂ —Ö—ç–ª–∂ —Å—É—Ä–∞—Ö –Ω—å —Å—ç—Ç–≥—ç–ª –∞–º–∞—Ä –∞–º—å–¥—Ä–∞–ª—ã–Ω —ç—Ö–ª—ç–ª. üö´",
        },
        {
            content: "–•—É–≥–∞—Ü–∞–∞ —Ö—è–∑–≥–∞–∞—Ä–ª–∞—Å–∞–Ω –∞–∂–∏–ª “Ø—Ä –¥“Ø–Ω—Ç—ç–π –±–∞–π–¥–≥–∏–π–≥ –º–∞—Ä—Ç—É—É–∑–∞–π. ‚è≥",
        },
        {
            content: "–ê–º—Ä–∞–ª—Ç –±–æ–ª –∑–∞–ª—Ö—É—É—Ä–∞–ª –±–∏—à. –¶—ç–Ω—ç–≥–ª—ç–ª—Ç –≥—ç–∂ –æ–π–ª–≥–æ. üîã",
        },
        {
            content: "–ê–º–∂–∏–ª—Ç –≥—ç–¥—ç–≥ –∑”©–≤—Ö”©–Ω –∞–∂–∏–ª–¥ –±–∏—à, –∞–º—å–¥—Ä–∞–ª—ã–Ω –±“Ø—Ö —Ç–∞–ª–¥ –æ—Ä—à–∏–Ω–æ. üåà",
        },
    ],
} as const

const categoryLabels: Record<string, string> = {
    all: "–ë“Ø–≥–¥",
    career: "–ö–∞—Ä—å–µ—Ä",
    technical: "–¢–µ—Ö–Ω–∏–∫–∏–π–Ω —É—Ä —á–∞–¥–≤–∞—Ä",
    communication: "–•–∞—Ä–∏–ª—Ü–∞–∞–Ω—ã —á–∞–¥–≤–∞—Ä",
    leadership: "–ú–∞–Ω–ª–∞–π–ª–∞–ª—ã–Ω —É—Ä —á–∞–¥–≤–∞—Ä",
    teamwork: "–ë–∞–≥–∞–∞—Ä –∞–∂–∏–ª–ª–∞—Ö",
    workupbalance: "–ê–∂–∏–ª-–∞–º—å–¥—Ä–∞–ª—ã–Ω —Ç—ç–Ω—Ü–≤—ç—Ä",
}
type Category = keyof typeof categorizedSteps | "all"

export function BuddyAdvice() {
    const [selectedCategory, setSelectedCategory] = useState<Category>("all")
    const [checkedItems, setCheckedItems] = useState<Record<string, boolean>>({});
    const selectedAdviceList =
        selectedCategory === "all"
            ? Object.entries(categorizedSteps).flatMap(([category, advices]) =>
                advices.map((advice, idx) => ({ ...advice, category, id: `${category}-${idx}` }))
            )
            : categorizedSteps[selectedCategory].map((advice, idx) => ({
                ...advice,
                category: selectedCategory,
                id: `${selectedCategory}-${idx}`,
            }));

    const toggleChecked = (id: string) => {
        setCheckedItems((prev) => ({
            ...prev,
            [id]: !prev[id],
        }));
    };

    return (
        <div className="space-y-10 space-x-10">
            <div className="w-full flex gap-3 overflow-scroll py-2">
                {(["all", ...Object.keys(categorizedSteps)] as Category[]).map((category) => (
                    <Button
                        key={category}
                        variant={selectedCategory === category ? "default" : "outline"}
                        onClick={() => setSelectedCategory(category)}
                    >
                        {categoryLabels[category] || category}
                    </Button>
                ))}
            </div>

            <div className="flex flex-col gap-5">
                {selectedAdviceList.map((step) => (
                    <div
                        key={step.id}
                        className="w-full py-5 px-6 space-y-3 border border-neutral-300 rounded-xl flex items-center justify-between gap-4 bg-white"
                    >
                        <div className="flex items-center gap-3">
                            <div className="w-8 h-8 flex items-center justify-center bg-orange-100 rounded-lg">
                                <Lightbulb size={18} color="#EA580C" />
                            </div>

                            <div>
                                <p className="text-wrap text-sm font-medium">
                                    {step.content}
                                </p>
                                <button className="py-1 px-[10px] bg-gray-100 rounded-full text-xs font-medium mt-2">
                                    {categoryLabels[step.category] || step.category}
                                </button>
                            </div>
                        </div>

                        {/* <div className="inline-block relative">
                            <input
                                type="checkbox"
                                id={step.id}
                                checked={!!checkedItems[step.id]}
                                onChange={() => toggleChecked(step.id)}
                                className="peer absolute opacity-0 w-5 h-5 text-white"
                            />
                            <label
                                htmlFor={step.id}
                                className="flex items-center justify-center w-5 h-5 rounded border border-gray-300 cursor-pointer
               peer-checked:bg-green-500 peer-checked:border-green-500 relative"
                            >
                                <svg width="12" height="9" viewBox="0 0 12 9" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path fillRule="evenodd" clipRule="evenodd" d="M11.8047 0.528758C12.0651 0.789108 12.0651 1.21122 11.8047 1.47157L4.4714 8.8049C4.21105 9.06525 3.78894 9.06525 3.5286 8.8049L0.195262 5.47157C-0.0650874 5.21122 -0.0650874 4.78911 0.195262 4.52876C0.455612 4.26841 0.877722 4.26841 1.13807 4.52876L4 7.39069L10.8619 0.528758C11.1223 0.268409 11.5444 0.268409 11.8047 0.528758Z" fill="white" />
                                </svg>

                            </label>
                        </div> */}





                    </div>
                ))}
            </div>
        </div>
    );
}